version: "3.8"

services:
  traefik:
    image: traefik:v2.11 # Consider using a newer version like v3.x if appropriate
    container_name: traefik
    restart: unless-stopped

    command:
      - "--providers.docker=true"
      - "--providers.file.directory=/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true" # Enable the dashboard
      - "--api.insecure=true" # Make dashboard accessible without auth (suitable for internal access)
      # - "--accesslog=true" # Disable stdout access log
      - "--accesslog.filepath=/logs/access.log" # Enable access log file
      # Add other static configurations if needed, e.g., logs

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Expose dashboard port internally

    volumes:
      # Mount Docker socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount dynamic configuration directory relative to docker-compose.yml
      - ./dynamic:/dynamic:ro
      # Mount certificates directory relative to docker-compose.yml
      - ./certs:/certs:ro
      # Mount logs directory
      - ./logs:/logs
      # Optional: Mount log file or directory
      - ./logs/traefik.log:/traefik.log

    # Optional: Add labels for Traefik dashboard if desired
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.yourdomain.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
    #   - "traefik.http.routers.traefik-dashboard.service=api@internal"
    #   - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
    #   - "traefik.http.routers.traefik-dashboard.tls=true"
    #   # Optional: Add middleware for basic auth
    #   # - "traefik.http.routers.traefik-dashboard.middlewares=auth"
    #   # - "traefik.http.middlewares.auth.basicauth.users=user:$$apr1$$...$$" # Generate with htpasswd

  whoami:
    image: traefik/whoami # A simple service that returns request information
    container_name: whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Define the router rule for the subdomain
      - "traefik.http.routers.whoami.rule=Host(`who.mehouse.casa`)"
      # Use the websecure entrypoint (HTTPS)
      - "traefik.http.routers.whoami.entrypoints=websecure"
      # Enable TLS for this router (uses the default certificate defined in tls.yml)
      - "traefik.http.routers.whoami.tls=true"

# Optional: Define networks if needed
# networks:
#   default:
#     name: traefik-net